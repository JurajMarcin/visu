# Definition of a single element template
# Multiple templates can defined by repeating the template definition in this or
# other files in schemes.d
#[[template]]

# Template name
#template = ""

# Other options are identical to the definition of a single element

# end of: Definition of a single element template


# Definition of a single scheme
# Multiple schemes can defined by repeating the scheme definition in this or
# other files in schemes.d
#[[scheme]]

# User visible name of the scheme
#scheme_name = ""

# Internal scheme ID, used in URLs
#scheme_id = ""

# Path to the scheme SVG file relative to the schemes directory
#svg_path = ""

# Interval in seconds in which the scheme is updated
#interval = 5


# Definition of a single element in the scheme
# Multiple elements can defined by repeating the element definition
#[[scheme.element]]

# Template name to inherit values from
# Only values explicitly set in the template and not set here are inherited
#template = ""

# Data module to retrieve values from
#data_module = ""

# Id of the value passed to the data module
# See documentation for data modules for possible values.
#data_id = ""

# Id of the element in the SVG
#svg_id = ""

# Allow user modification of the value
#write = False

# Subscribe to Change of Value messages
# Not supported by all data modules
#cov = False

# If set to true, read using a single request, do not aggregate
#single = False

# InfluxDB query filters used for historical data graph
# Use of multi-line strings is recommended for readability
# influx_query = """\
#"""

# Type of the element, possible values: "text", "int", "float", "bool"
#type = "text"

# Check the user value with this regular expression when modifying
# The user value is not checked if not set
#match = ""

# Minimum allowed value when modifying
# Used for "int" and "float" type
# The user value is not checked if not set
#min = 0.0

# Maximum allowed value when modifying
# Used for "int" and "float" type
# The user value is not checked if not set
#max = 0.0

# Map values using this map before showing in the scheme as text
# Unmapped values are displayed as received
#map = { }

# Round floating point values to precision
#precision = 4


# Definition of one style for the element
# Multiple can be defined by repeating the style definition including the array
# table header, first matched is used
# If no styles are defined, the default style is used
# If no style is matches, the element is left unchanged
# Style is matched using raw value received, before mapping
#[[scheme.elements.text.style]]

# Style is used if regular expression matches and the range is undefined or the
# value cannot be parsed as a number
#match = ".*"
# If the value is a number and is in range, the style is used
# If one is not set, it is considered -inf or inf respectively
#min = 0.0
#max = 0.0

# Set the fill style property to
# Property is left intact if not set
#fill = ""

# Set the opacity property to, expects value in range [0, 1]
# Property is left intact if not set
#opacity = 1

# Set style attribute to
# Attribute is left intact if not set
# This option overrides previous fill and opacity options
#style = ""

# Set inner SVG text to (including replacing all child SVG elements)
# "%%" can be used as a placeholder for current (rounded, mapped) value
# SVG text and child elements are left intact if not set
#text = "%%"

# end of: Definition of one style for the element

# end of: Definition of a single element in the scheme

# end of: Definition of a single scheme
